# Informa ao spring security onde está o authorization server
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_JWT_ISSUER_URI:http://localhost:18080/auth/realms/nosso-cartao}

# Informa ao spring security onde pode encontrar as chaves para conseguir validar a assinatura do token
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWK_SET_URI:http://localhost:18080/auth/realms/nosso-cartao/protocol/openid-connect/certs}


spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5433/db_proposta}
spring.datasource.username=postgres
spring.datasource.password=password


spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL95Dialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.hibernate.ddl-auto=update


analise.conta.host=${API_CONTA_URL:http://localhost:8888/}
analise.conta.endpoint=${API_CONTA_ENDPOINT:/api/cartoes}
analise.financeira.host=${API_FINANCEIRA_URL:http://localhost:9999/}
analise.financeira.endpoint=${API_FINANCEIRA_ENDPOINT:/api/solicitacao}


periodicidade.associa.cartao=${PERIOCIDADE_ASSOCIA_CARTAO:180000}


#feign.client.config.analisefinanceira-api.read-timeout=100


management.endpoints.web.exposure.include=health,metrics
management.endpoint.health.show-details=always
management.endpoints.web.exposure.exclude=env,beans